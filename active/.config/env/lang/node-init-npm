# NOTE: to stay logged into multiple registries simultaneously see:
# https://github.com/npm/npm/issues/5717#issuecomment-49561182
export NPM_CONFIG_USERCONFIG="$HOME/Documents/private/@home/.npmrc" # to keep `~/.npmrc` out of source control.
export NPM_CONFIG_EMAIL="wil.moore@wilmoore.com"
export NPM_CONFIG_INIT_MODULE=""
export NPM_CONFIG_INIT_AUTHOR_NAME="Wil Moore III"
export NPM_CONFIG_INIT_AUTHOR_EMAIl="wil.moore@wilmoore.com"
export NPM_CONFIG_INIT_AUTHOR_URL="http://github.com/wilmoore"
export NPM_CONFIG_INIT_LICENSE="MIT"
export NPM_CONFIG_INIT_VERSION="0.0.0"
export NPM_CONFIG_STRICT_SSL="true"
export NPM_CONFIG_CACHE="$HOME/.cache/npm"
export NPM_CONFIG_PREFIX="$NODE_HOME"
export NPM_CONFIG_FETCH_RETRY_FACTOR=1
export NPM_CONFIG_FETCH_RETRY_MINTIMEOUT=5
export NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT=5

# where globally installed programs live.
export PATH=$NPM_CONFIG_PREFIX/bin:$PATH

# add flexibility to npm based on how your project is setup.
# npm () {
#   if [[ -z `command -v node` ]]; then
#     echo 'You need to install NodeJS before you can run npm' >&2
#     return 1
#   fi
#
#   if [[ $USE_NODE_NPM -eq 1 ]]; then
#     # for projects that have messed up dependencies that break on flat `node_modules` or have other obscure issues where `npm` specific to that node version is needed.
#     $(dirname $(which node))/npm $*
#   else
#     # use the npm installed in configured `$NPM_CONFIG_PREFIX`.
#     $(command npm config get prefix)/bin/npm $*
#   fi
# }
