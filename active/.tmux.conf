################################################################################
# My Personal TMUX Configuration -- `~/.tmux.conf`
# Wil Moore III <wil.moore@wilmoore.com>
#
# Always up-to-date @:
# - http://goo.gl/W4nLNN
#
# For further inspiration, see:
# - http://zanshin.net/2013/09/05/my-tmux-configuration
################################################################################

# pass through environment variables
set -g update-environment -r

# expect UTF-8 sequences
set-option -g utf8
set-window-option -g utf8 on

# start window and pane indexing at one (default = 0)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# enable window titles
set -g set-titles on

# window title string
set-option -g set-titles-string '#S:#W.#P @ #H'

# amount of time for which messages and other indicators are displayed (in milliseconds).
set -g display-time 2000

# aggressive resize

# When a smaller terminal connects to a tmux client, it shrinks to fit it. The clients attached with bigger displays see this constrained view. aggressive-resize makes it such that the window is only resized if the smaller client is actively looking at it.
# http://justinlilly.com/dotfiles/tmux.html
set-window-option -g aggressive-resize on

# easily toggle synchronization (mnemonic: e is for echo)

bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off

# don't wait for an escape sequence after hitting ESC. Fixes insert mode exit lag in vim.
# SEE: http://blog.terriblelabs.com/blog/2013/02/09/stupid-vim-tricks-how-to-change-insert-mode-cursor-shape-with-tmux/
# SEE: https://mutelight.org/practical-tmux

set -sg escape-time 0

# reload tmux configuration on `PREFIX r`

bind-key r source-file ~/.tmux.conf \; display-message "Configuration Reloaded"

################################################################################
# prefix key setup (new)
################################################################################

# set PREFIX to `^<Space>`: that is <CTRL>+<Space> (http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity)
# NOTE: YOU MUST map "caps lock" to "control" for this to be useful, otherwise it is quite painful.

unbind C-b
set -g prefix C-Space
bind Space send-prefix

################################################################################
# mouse control
################################################################################

# explicitly disable mouse control

set-window-option -g mode-mouse off
set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off

################################################################################
# terminal
################################################################################

# have tmux advertise itself as being "capable of displaying 256 colors"
# http://stackoverflow.com/a/15378816/128346

set-option -g default-terminal "screen-256color"

################################################################################
# pane interaction
################################################################################

# Increase the short display time (milliseconds)

set-option -g display-panes-time 9000

# map normal VIM navigation keys as pane navigation keys: PREFIX h, j, k, l

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# map uppercase VIM navigation keys as pane resizer keys: PREFIX H, J, K, L

bind-key -r H resize-pane -L 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 1

# `PREFIX Tab`: cycle through panes

bind-key -r Tab select-pane -t :.+

# `PREFIX | and _`: better semantics for creating horizontal/vertical splits

bind-key _ split-window -v
bind-key | split-window -h

################################################################################
# window interaction
################################################################################

# move window to...
bind-key m command-prompt -p "move window to session:"  "move-window -t '%%'"

################################################################################
# selection, copy-mode, scrolling
################################################################################

# NOTE: copy mode is activated with `PREFIX + [`

# make copy paste work
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard

set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Update default binding of `Enter` to also use copy-pipe

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# `v` starts a selection and `y` finishes a selection (also copy to system clipboard).

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Use vim keybindings in copy mode

set-option -g status-keys vi
set-window-option -g mode-keys vi

# Bind <Space> to enter copy mode.

bind Space copy-mode
bind C-Space copy-mode

################################################################################
# visual style
################################################################################

# set pane colors - hilight the active pane

set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line

set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# visual notification of activity in other windows

set-window-option -g monitor-activity on
set-option -g visual-activity on

# `PREFIX p`: display visible indicator of each pane (same as `PREFIX q`)

bind-key p display-panes

################################################################################
# status bar settings
################################################################################

# enable status
set-option -g status on

# utf8
set-option -g status-utf8 on

# interval
set-option -g status-interval 5

################################################################################
# status bar format
################################################################################

# Set status bar
set -g status-justify left
set -g status-right-length 150
set -g status-left ""
set -g status-right "%FT%H:%M:%S%z"

################################################################################
# status bar colors
################################################################################

# set color for status bar
set-option -g status-fg blue
set-option -g status-bg colour235
set-option -g status-attr dim

# set window list colors - red for active and white for inactive
set-window-option -g window-status-fg white
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim
set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright
